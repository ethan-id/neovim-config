import ff from '../src/featureFlags.ts';

beforeEach(() => {
    ff.clear();
});

describe('Feature Flags', () => {
    test('feature flag lifecycle', () => {
        // Define a flag with default false
        ff.define('newUI', {default: false});
        expect(ff.isEnabled('newUI')).toBe(false);

        // Set the flag to true
        ff.set('newUI', true);
        expect(ff.isEnabled('newUI')).toBe(true);
    });

    test('features can be enabled for specific users', () => {
        ff.define('test-feature', {default: true}, [{id: 'test-user'}]);

        expect(ff.isEnabled('test-feature', 'test-user2')).toBe(false);
        expect(ff.isEnabled('test-feature', 'test-user')).toBe(true);

        // False because the feature should only be enabled for test-user
        expect(ff.isEnabled('test-feature')).toBe(false);
    });
});
